# To get started with security, check out the documentation:
# https://symfony.com/doc/current/security.html
security:
    encoders:
        FOS\UserBundle\Model\UserInterface: sha512
    acl:
        connection: default

    role_hierarchy:
        ROLE_ADMIN:       ROLE_USER
        ROLE_SUPER_ADMIN: ROLE_ADMIN
        SONATA:
            - ROLE_SONATA_PAGE_ADMIN_PAGE_EDIT  # if you are using acl then this line must be commented



    # https://symfony.com/doc/current/security.html#b-configuring-how-users-are-loaded
    providers:
        fos_userbundle:
            id: fos_user.user_provider.username
        hwi: #must be (i dnt know why, but its so)
            id: custom.hwi.user.provider
            #id: hwi_oauth.user.provider
            #hwi_oauth.user.provider.fosub_bridge

    firewalls:
#        login:
#            pattern:  ^/login/?$
#            anonymous: ~

#        secured_area:
#            pattern:    ^/
#            logout: true
#            anonymous: true
#            oauth:
#                resource_owners:
#                    google: google_login
#                    facebook: facebook_login
#                login_path:        /login
#                use_forward:       false
#                failure_path:      /login
#                oauth_user_provider:
#                    service: custom.hwi.user.provider

        # disables authentication for assets and the profiler, adapt it according to your needs
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        admin:
            pattern:            /admin(.*)
            context:            user
            form_login:
                provider:       fos_userbundle
                login_path:     /admin/login
                use_forward:    false
                check_path:     /admin/login_check
                failure_path:   null
            anonymous:          true

#        main:
#            pattern: ^/
#            form_login:
#                provider: fos_userbundle
#                csrf_token_generator: security.csrf.token_manager # Use form.csrf_provider instead for Symfony <2.4
#            logout:       true
#            anonymous:    true
        main:
            pattern:             .*
            context:             user
            form_login:
                provider:       fos_userbundle
                login_path:     /login
                use_forward:    false
                check_path:     /login_check
                failure_path:   null
            oauth:
                resource_owners:
                    google: google_login
                    facebook: facebook_login
                login_path:        /login
                use_forward:       false
                failure_path:      /login
                oauth_user_provider:
                    service: custom.hwi.user.provider
            logout:             true
            anonymous:          true

    access_control:
        - { path: ^/logout, role: role: [ROLE_USER] }
        - { path: ^/restricted, role: IS_AUTHENTICATED_FULLY }

        # URL of FOSUserBundle which need to be available to anonymous users
        - { path: ^/login/?$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/register, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/resetting, role: IS_AUTHENTICATED_ANONYMOUSLY }

        # Admin login page needs to be accessed without credential
        - { path: ^/admin/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin/logout$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin/login_check$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin/resetting, role: IS_AUTHENTICATED_ANONYMOUSLY }

        # Secured part of the site
        # This config requires being logged for the whole site and having the admin role for the admin part.
        # Change these rules to adapt them to your needs
        - { path: ^/admin/, role: [ROLE_ADMIN, ROLE_SONATA_ADMIN] }
        - { path: ^/.*, role: IS_AUTHENTICATED_ANONYMOUSLY }