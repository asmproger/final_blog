# Learn more about services, parameters and containers at
# https://symfony.com/doc/current/service_container.html
parameters:
    #parameter_name: value

services:
    # default configuration for services in *this* file
    _defaults:
        # automatically injects dependencies in your services
        autowire: true
        # automatically registers your services as commands, event subscribers, etc.
        autoconfigure: true
        # this means you cannot fetch services directly from the container via $container->get()
        # if you need to do this, you can override this setting on individual services
        public: false

    # makes classes in src/AppBundle available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    AppBundle\:
        resource: '../../src/AppBundle/*'
        # you can exclude directories or files
        # but if a service is unused, it's removed anyway
        exclude: '../../src/AppBundle/{Entity,Repository,Tests}'

    # controllers are imported separately to make sure they're public
    # and have a tag that allows actions to type-hint services
    AppBundle\Controller\:
        resource: '../../src/AppBundle/Controller'
        public: true
        tags: ['controller.service_arguments']

#    sonata.admin.users:
#        class: AppBundle\Admin\UserAdmin
#        arguments: [~, AppBundle\Entity\User, ~]
#        tags:
#            - { name: sonata.admin, manager_type: orm, group: Users, label: Users }
#        public: true

    sonata.admin.static_pages:
        class: AppBundle\Admin\StaticPageAdmin
        arguments:
            [~, AppBundle\Entity\StaticPage, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, group: Common, label: Static pages }

    # custom provider servce
    custom.hwi.user.provider:
        class: AppBundle\Security\CustomHwiUserProvider
        arguments:
            $userManager: "@fos_user.user_manager"
            $properties:
                google: gplusUid
                facebook: facebookUid

    custom.registration.form:
        class: AppBundle\Form\RegistrationType
        tags:
            - { name: form.type, alias: custom_registration_form }

    AppBundle\EventListener\ExceptionListener:
        tags:
            - { name: kernel.event_listener, event: kernel.exception }

    AppBundle\EventListener\RegistrationListener:
        class: AppBundle\EventListener\RegistrationListener
        arguments:
            $entityManager: "@doctrine.orm.entity_manager"
        tags:
            - { name: kernel.event_listener, event: fos_user.registration.completed }

    AppBundle\EventListener\DoctrineListener:
        class: AppBundle\EventListener\DoctrineListener
        tags:
            - { name: doctrine.event_listener, event: prePersist }

    custom.file.uploader:
        public: true
        class: AppBundle\Utils\FileUploader
        arguments:
            $entityManager: "@doctrine.orm.entity_manager"
            $directory: '%images_directory%'

    custom.menu_builder:
        class: AppBundle\Menu\Builder
        arguments: ["@knp_menu.factory", "@request_stack", "@doctrine.orm.entity_manager"]
        tags:
            - { name: knp_menu.menu_builder, method: breadcrumbsMenu, alias: breadcrumb }
        public: true