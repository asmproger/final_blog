<?php

namespace Application\Sonata\UserBundle\Entity;

use AppBundle\Entity\Profile;
use Sonata\UserBundle\Entity\BaseUser;
use Doctrine\Common\Collections\ArrayCollection;
use Doctrine\ORM\Mapping as ORM;

use AppBundle\Entity\Image;
/**
 * This file has been generated by the SonataEasyExtendsBundle.
 *
 * @link https://sonata-project.org/easy-extends
 *
 * References:
 * @link http://www.doctrine-project.org/projects/orm/2.0/docs/reference/working-with-objects/en
 */
class User extends BaseUser
{
    public function __construct()
    {
        parent::__construct();
        $this->items = new ArrayCollection();
        $this->myFriends = new ArrayCollection();
        $this->friendsWithMe = new ArrayCollection();
    }

    /**
     * @var int $id
     */
    protected $id;

    /**
     * @var int $image_id
     */
    protected $image_id;

    /**
     * @var Image $image
     */
    protected $image;

    protected $photo_control;

    /**
     * @var Profile
     */
    protected $profile;

    /**
     * @return mixed
     */
    public function getImage()
    {
        return $this->image;
    }

    /**
     * @param mixed $image
     */
    public function setImage($image)
    {
        $this->image = $image;
    }

    protected $items;
    protected $myFriends;
    protected $friendsWithMe;

    /**
     * Get id.
     *
     * @return int $id
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * @return mixed
     */
    public function getItems()
    {
        return $this->items;
    }

    /**
     * @return int
     */
    public function getImageId()
    {
        return $this->image_id;
    }

    /**
     * @param int $image_id
     */
    public function setImageId($image_id)
    {
        $this->image_id = $image_id;
    }

    /**
     * @return mixed
     */
    public function getPhotoControl()
    {
        return $this->photo_control;
    }

    /**
     * @param mixed $photo_control
     */
    public function setPhotoControl($photo_control)
    {
        $this->photo_control = $photo_control;
    }

    /**
     * @return mixed
     */
    public function getProfile()
    {
        return $this->profile;
    }

    /**
     * @param mixed $profile
     */
    public function setProfile($profile)
    {
        $this->profile = $profile;
    }

    /**
     * he is in my friends
     * @param User $user
     * @return bool
     */
    public function isFriend(User $user) {
        return $this->myFriends->contains($user);
    }

    /**
     * add user to myFriends
     * @param User $user
     */
    public function addFriend(User $user) {
        if(!$this->myFriends->contains($user)) {
            $this->myFriends->add($user);
        }
    }

    /**
     * add user to myFriends
     * @param User $user
     */
    public function removeFriend(User $user) {
        if($this->myFriends->contains($user)) {
            $this->myFriends->remove($user);
        }
    }

    /**
     * i'm in his friends
     * @param User $user
     * @return bool
     */
    public function isFriendWithMe(User $user) {
        return $this->friendsWithMe->contains($user);
    }

    /**
     * @return ArrayCollection
     */
    public function getMyFriends()
    {
        return $this->myFriends;
    }

    /**
     * @param ArrayCollection $myFriends
     */
    public function setMyFriends($myFriends)
    {
        $this->myFriends = $myFriends;
    }

    /**
     * @return ArrayCollection
     */
    public function getFriendsWithMe()
    {
        return $this->friendsWithMe;
    }

    /**
     * @param ArrayCollection $friendsWithMe
     */
    public function setFriendsWithMe($friendsWithMe)
    {
        $this->friendsWithMe = $friendsWithMe;
    }

}
